# name
name: frontend-cd

on:
  # manual
  workflow_dispatch:
  
  # on push
  push:
    branches:
      - main
    paths:
      - "starter/frontend/**/*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    # checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # setup Node.js
    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        # use cache
        cache: "npm"
        cache-dependency-path: starter/frontend
    
    # install dependencies
    - name: Install
      working-directory: starter/frontend
      run: |
        npm ci

    # lint
    - name: Lint
      working-directory: starter/frontend
      run: |
        npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
    # checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # setup Node.js
    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        # use cache
        cache: "npm"
        cache-dependency-path: starter/frontend
    
    # install dependencies
    - name: Install
      working-directory: starter/frontend
      run: |
        npm ci

    # test
    - name: Test
      working-directory: starter/frontend
      run: |
        npm run test

  build:
    runs-on: ubuntu-latest
    # only if lint and test are successful
    needs: [lint, test]
    steps:
    # checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # log into ECR
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # build Docker image with backend URL variable
    - name: Build and push Docker image
      working-directory: starter/frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://a3743aeb788714f6ab6d6e511bf89577-1310681013.us-east-1.elb.amazonaws.com --tag 959819173443.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA} .
        docker push 959819173443.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # log into ECR
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Configure kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name cluster

    - name: Deploy Kubernetes manifests
      working-directory: starter/frontend/k8s
      run: |
        kustomize edit set image frontend=959819173443.dkr.ecr.us-east-1.amazonaws.com/frontend:${GITHUB_SHA}
        kustomize build | kubectl apply -f -
